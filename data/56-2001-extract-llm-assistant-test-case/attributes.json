{
	"attributes": [
		{"entity": "road vehicle", "expected_output": [ {"name": "is not listed as missing", "inference": "the road vehicle is not listed as missing", "data_type": "boolean", "cardinality": ""}, {"name": "is not listed as stolen", "inference": "the road vehicle is not listed as stolen", "data_type": "boolean", "cardinality": ""}]},
		{"entity": "motorised vehicle", "expected_output": [{"name": "category", "inference": "vehicle category", "data_type": "string", "cardinality": ""}, {"name": "purpose", "inference": "the purpose for which the road vehicle is intended", "data_type": "string", "cardinality": ""}, {"name": "factory mark", "inference": "the manufacturer's factory mark as specified by the road vehicle manufacturer", "data_type": "string", "cardinality": ""}, {"name": "trade name", "inference": "the trade name if specified by the road vehicle manufacturer", "data_type": "string", "cardinality": ""}, {"name": "vehicle identification number", "inference": "the vehicle identification number (VIN) of the road vehicle", "data_type": "string", "cardinality": ""}, {"name": "chassis serial number", "inference": "the chassis serial number of the road vehicle", "data_type": "string", "cardinality": ""},{"name": "number of seats", "inference": "for a road vehicle it is stated: number of seats", "data_type": "integer", "cardinality": ""}, {"name": "number of standing places", "inference": "for a road vehicle it is stated: number of standing places", "data_type": "integer", "cardinality": ""}, {"name": "number of beds", "inference": "for a road vehicle it is stated: number of beds", "data_type": "integer", "cardinality": ""}, {"name": "dimensions of loading area", "inference": "for a road vehicle it is stated: dimensions of the loading area", "data_type": "number", "cardinality": ""}, {"name": "volume of box", "inference": "for a road vehicle it is stated: volume of the box", "data_type": "number", "cardinality": ""}, {"name": "volume of tank", "inference": "for a road vehicle it is stated: volume of the tank", "data_type": "number", "cardinality": ""}, {"name": "overall dimension", "inference": "the overall dimensions of the road vehicle", "data_type": "number", "cardinality": ""}]},
		{"entity": "natural person", "expected_output": [{"name": "full name", "inference": "If the person is a natural person, his name", "data_type": "string", "cardinality": ""}, {"name": "first name", "inference": "If the person is a natural person, where applicable, first names", "data_type": "string", "cardinality": "0..*"}, {"name": "last name", "inference": "If the person is a natural person, where applicable, last names", "data_type": "string", "cardinality": "0..*"}, {"name": "birth number", "inference": "If the person is a natural person, his birth number", "data_type": "integer", "cardinality": "0..1"}, {"name": "birth date", "inference": "If the person is a natural person, his date of birth shall be entered", "data_type": "string", "cardinality": "0..1"}]},
		{"entity": "business natural person", "expected_output": [{"name": "business name", "inference": "if the person is a natural person engaged in business, then the business name", "data_type": "string", "cardinality": "0..1"}, {"name": "first name", "inference": "if the person is a natural person engaged in business, then business name or first name", "data_type": "string", "cardinality": "0..*"}, {"name": "last name", "inference": "if the person is a natural person engaged in business, then business name or last name", "data_type": "string", "cardinality": "0..*"}, {"name": "distinguishing name supplement", "inference": "if the person is a natural person engaged in business, where appropriate, a distinguishing supplement", "data_type": "string", "cardinality": "0..1"}, {"name": "personal identification number", "inference": "if the person is a natural person engaged in business, where appropriate, the personal identification number", "data_type": "string", "cardinality": "0..1"}]},
		{"entity": "legal person", "expected_output": [{"name": "business name", "inference": "If it is a legal person, then the business name or name shall be indicated", "data_type": "string", "cardinality": "0..1"}, {"name": "name", "inference": "If it is a legal person, then the business name or name shall be indicated", "data_type": "string", "cardinality": "0..1"}, {"name": "personal identification number", "inference": "If it is a legal person the personal identification number shall be indicated", "data_type": "string", "cardinality": "0..1"}]},
		{"entity": "legal person branch", "expected_output": [{"name": "business name", "inference": "If it is a legal person or a branch thereof, then the business name or name shall be indicated", "data_type": "string", "cardinality": "0..1"}, {"name": "name", "inference": "If it is a legal person or a branch thereof, then the business name or name shall be indicated", "data_type": "string", "cardinality": "0..1"}]},
		{"entity": "registration", "expected_output":[{"name": "registration date", "inference": "the date of first registration of the road vehicle", "data_type": "string", "cardinality": ""}, {"name": "state of registration", "inference": "the state of last registration of the road vehicle", "data_type": "string", "cardinality": ""}, {"name": "registration plate", "inference": "the registration plate", "data_type": "string", "cardinality": "0..1"}, {"name": "registration plate assignment date", "inference": "the date on which the registration plate was assigned", "data_type": "string", "cardinality": "0..1"}]},
		{"entity": "registration certificate", "expected_output": [{"name": "number", "inference": "the number of the registration certificate", "data_type": "number", "cardinality": ""}]},
		{"entity": "registration application", "expected_output": [{"name": "proof of vehicle roadworthiness", "inference": "attach to the application for registration a proof of the vehicle's roadworthiness", "data_type": "string", "cardinality": ""}, {"name": "proof of technical inspection", "inference": "attach to the application for registration proof of a technical inspection", "data_type": "string", "cardinality": ""}]},
		{"entity": "third party insurance", "expected_output": [{"name": "date of notification", "inference": "the date of notification", "data_type": "string", "cardinality": ""}, {"name": "date of commencement", "inference": "the date of commencement of insurance", "data_type": "string", "cardinality": ""}, {"name": "period of interruption", "inference": "the period of interruption of insurance", "data_type": "string", "cardinality": ""}, {"name": "date of change", "inference": "the date of change of insurance", "data_type": "string", "cardinality": ""}, {"name": "date of termination", "inference": "the date of termination of insurance", "data_type": "string", "cardinality": ""}]},
		{"entity": "insurance contract", "expected_output": [{"name": "duration of insurance", "inference": "the insurance contract shall always contain the duration of the insurance", "data_type": "string", "cardinality": ""}, {"name": "limit of insurance benefits", "inference": "the insurance contract shall always contain the limit of the insurance benefit", "data_type": "string", "cardinality": ""}, {"name": "amount of premium", "inference": "the insurance contract shall always contain the amount of the premium", "data_type": "string", "cardinality": ""}, {"name": "maturity", "inference": "the insurance contract shall always contain its maturity", "data_type": "string", "cardinality": ""}, {"name": "method of payment", "inference": "the insurance contract shall always contain the method of payment", "data_type": "string", "cardinality": ""}, {"name": "form of notification of claim", "inference": "the insurance contract shall always contain the form of notification of the claim", "data_type": "string", "cardinality": ""}, {"name": "place of notification of claim", "inference": "the insurance contract shall always contain the place of notification of the claim", "data_type": "string", "cardinality": ""}]},
		{"entity": "engine", "expected_output": [{"name": "engine type", "inference": "type of engine specified by the manufacturer of the road vehicle", "data_type": "string", "cardinality": ""}, {"name": "engine power", "inference": "engine power specified by the road vehicle manufacturer", "data_type": "integer", "cardinality": ""}, {"name": "fuel type", "inference": "the engine data for the road vehicle that include the fuel type of the road vehicle", "data_type": "string", "cardinality": ""}]},
		{"entity": "internal combustion engine", "expected_output": [{"name": "displacement", "inference": "the displacement of the internal combustion engine", "data_type": "string", "cardinality": ""}]},
		{"entity": "bodywork", "expected_output": [{"name": "type", "inference": "type of bodywork", "data_type": "string", "cardinality": ""}, {"name": "serial number", "inference": "serial number of bodywork", "data_type": "string", "cardinality": ""}, {"name": "color", "inference": "colour of bodywork", "data_type": "string", "cardinality": ""}]},
		{"entity": "technical inspection", "expected_output": [{"name": "type", "inference": "type of technical inspection carried out", "data_type": "string", "cardinality": ""}, {"name": "date", "inference": "date on which the technical inspection was carried out", "data_type": "string", "cardinality": ""}, {"name": "date of validity", "inference": "date of validity of the technical inspection", "data_type": "string", "cardinality": ""}, {"name": "condition", "inference": "data on the condition of the road vehicle according to the result of the technical inspection", "data_type": "string", "cardinality": ""}, {"name": "result", "inference": "result of the technical inspection", "data_type": "string", "cardinality": ""}]},
		{"entity": "technical inspection report", "expected_output": [{"name": "date of issue", "inference": "the date of issue of the technical inspection report", "data_type": "string", "cardinality": ""}]}
	]
}